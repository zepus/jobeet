Day 3 - Relational Model (using Doctrine)
    - "config/doctrine/schema.yml" - schema of the database
    - Command = "$ php symfony doctrine:build-schema" - generates the corresponding schema.yml configuration file
    - Command = "$ php symfony configure:database "mysql:host=localhost;dbname=jobeet" root mYsEcret"
                - Tells symfony to use a database for a project
    - Command = "$ php symfony doctrine:build --model" - build models from schema files
                - Generates PHP files in the lib/model/ directory that can be used to interact with the database
    - Command = "$ php symfony doctrine:build --sql" - generate and insert SQL
                - The doctrine:build --sql task generates SQL statements in the data/sql/ directory
    - Command = "$ php symfony doctrine:insert-sql" - creates the tables
    - Command = "$ php symfony doctrine:build --all --no-confirmation" - generate forms and validators for the project model classes
    - "[data/fixtures/categories.yml] // [data/fixtures/jobs.yml]" - contains initial data used to populate database
    - Command = "doctrine:data-load" - loads the data from "categories.yml" into the database
    - "web/uploads/jobs/" - contains images and other files uploaded from users
    - Command = "doctrine:build --all --and-load"
    - Command = "$ php symfony doctrine:generate-module --with-show --non-verbose-templates frontend job JobeetJob"
                - The "doctrine:generate-module" generates a job module in the frontend application for the JobeetJob model

Day 4 - View and Controller
    - template = view
    - web = here are added the css, images, js and others
    - "apps/frontend/templates/" - default layout of an application
        - $sf_content - is defined by the framework itself and contains the HTML generated by the action
    - "apps/frontend/config/view.yml" - configures the default settings for all the templates of the application
    - "apps/frontend/modules/job/config/view.yml" - customize the view for the job module
    - Configuration Principles in symfony:
        - The default configuration is located in the framework
        - The global configuration for the project (in config/)
        - The local configuration for an application (in apps/APP/config/)
        - The local configuration restricted to a module (in apps/APP/modules/MODULE/config/)
    - "apps/frontend/modules/job/actions/actions.class.php" - contains actions of a page represented by methods of a class
    - "apps/frontend/modules/job/templates/indexSuccess.php" - template generates an HTML page for index
    - "apps/frontend/modules/job/templates/showSuccess.php" - template generates an HTML page for each job with details
    - "[include_slot('title')] // [slot('title')]" - add slot to allow the title to be dynamic


Day 5 - Routing
    - "apps/frontend/config/routing.yml" - mapps between internal URIs and external URLs
    - Command = "cache:clear" - updates the routing configuration in the production environment
    - Command = "$ php symfony app:routes frontend" - list the generated routes
    - Command = "sfConfig" class - for global usage of app settings
    - "apps/frontend/config/app.yml" - centralizing global settings for application
    - "config/app.yml" - centralizing global settings for project